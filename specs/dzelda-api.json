{
  "openapi": "3.1.0",
  "x-stoplight": {
    "id": "64dpjoe1w4irj"
  },
  "info": {
    "title": "dzelda-api",
    "version": "1.0",
    "description": "",
    "summary": "The backend API for Dzelda: a free and open source language learning website."
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    }
  ],
  "tags": [
    {
      "name": "user",
      "description": "Related to the user resource."
    },
    {
      "name": "auth",
      "description": "Related to authentication: sign up, login, password reset, etc."
    },
    {
      "name": "language",
      "description": "Related to the language resource."
    },
    {
      "name": "course",
      "description": "Related to the course resource."
    },
    {
      "name": "lesson",
      "description": "Related to the lesson resource."
    },
    {
      "name": "vocab",
      "description": "Related to the vocab resource."
    },
    {
      "name": "meaning",
      "description": "Related to the meaning resource."
    },
    {
      "name": "dictionary",
      "description": "Related to the dictionary resource."
    }
  ],
  "paths": {
    "/users": {
      "post": {
        "summary": "Sign Up",
        "operationId": "post-users",
        "responses": {
          "201": {
            "description": "Created\n\nA new user is created and returned. If `initialLanguage` is supplied, that language is added to the languages the user is learning.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "type": "object",
                  "properties": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Create a new user.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 20,
                    "pattern": "^[A-Za-z0-9]*$"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "format": "password"
                  },
                  "email": {
                    "type": "string",
                    "format": "email"
                  },
                  "initialLanguage": {
                    "type": "string",
                    "minLength": 2,
                    "maxLength": 4
                  }
                },
                "required": [
                  "username",
                  "password",
                  "email"
                ]
              }
            }
          },
          "description": ""
        },
        "security": [],
        "tags": [
          "auth",
          "user"
        ]
      }
    },
    "/users/{username}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "Get User",
        "tags": [
          "user"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns user info if user is logged in and username is \"me\" or if it belongs to the currently logged in user.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username",
        "description": "Get user details, including profile."
      }
    },
    "/sessions": {
      "post": {
        "summary": "Login",
        "operationId": "post-sessions",
        "responses": {
          "200": {
            "description": "OK\n\nUser is logged in. Returns authentication token.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "authToken": {
                      "type": "string"
                    }
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "Authenticate the user",
        "security": [],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "username": {
                    "type": "string",
                    "minLength": 4,
                    "maxLength": 20,
                    "pattern": "^[A-Za-z0-9]*$"
                  },
                  "password": {
                    "type": "string",
                    "minLength": 8,
                    "format": "password"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "auth"
        ]
      }
    },
    "/languages": {
      "get": {
        "summary": "Get Languages",
        "tags": [
          "language"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns a list of languages that match query.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "operationId": "get-languages",
        "description": "Get a list of languages",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isSupported"
          }
        ],
        "security": []
      }
    },
    "/courses": {
      "get": {
        "summary": "Get Courses",
        "tags": [
          "course"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns a list of courses that match query. If the user is logged in `vocabLevels` are appended to eaech of them to show how many vocabs of each level the course has.",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "operationId": "get-courses",
        "description": "Get list of courses",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "languageCode"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "beginner1",
                  "beginner2",
                  "intermediate1",
                  "intermediate2",
                  "advanced1",
                  "advanced2"
                ]
              },
              "minItems": 0,
              "maxItems": 6
            },
            "in": "query",
            "name": "level"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          }
        ],
        "security": []
      },
      "post": {
        "summary": "Create Course",
        "operationId": "post-courses",
        "responses": {
          "201": {
            "description": "Created\n\nA new course is created and returned.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetails",
                  "x-examples": {}
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "413": {
            "$ref": "#/components/responses/RequestTooLarge"
          },
          "415": {
            "$ref": "#/components/responses/UnsupportedMediaType"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "data": {
                    "type": "object",
                    "properties": {
                      "language": {
                        "type": "string"
                      },
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "level": {
                        "type": "string"
                      }
                    },
                    "required": [
                      "language",
                      "title"
                    ]
                  },
                  "image": {
                    "type": "string",
                    "format": "binary"
                  }
                }
              }
            }
          },
          "description": ""
        },
        "description": "Create a new course.",
        "tags": [
          "course"
        ]
      }
    },
    "/courses/{courseId}": {
      "parameters": [
        {
          "schema": {
            "type": "number"
          },
          "name": "courseId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Course",
        "tags": [
          "course"
        ],
        "responses": {
          "200": {
            "description": "OK\n\nReturns the course with `courseId`.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-courses-courseId",
        "description": "Get course details."
      },
      "put": {
        "summary": "Update Course",
        "operationId": "put-courses-courseId",
        "responses": {
          "200": {
            "description": "OK\n\nUpdates the course and returns it.",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/CourseDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Update course details.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "title",
                      "description",
                      "isPublic",
                      "lessonIds",
                      "level"
                    ],
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "description": {
                        "type": "string"
                      },
                      "isPublic": {
                        "type": "boolean"
                      },
                      "lessonIds": {
                        "type": "array",
                        "items": {
                          "type": "integer"
                        }
                      },
                      "level": {
                        "type": "string"
                      }
                    }
                  }
                },
                "required": [
                  "image",
                  "data"
                ]
              }
            }
          }
        },
        "tags": [
          "course"
        ]
      }
    },
    "/lessons": {
      "get": {
        "summary": "Get Lessons",
        "tags": [
          "lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LessonList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          }
        },
        "operationId": "get-lessons",
        "description": "Get a list of lessons",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "language"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "beginner1",
                  "beginner2",
                  "intermediate1",
                  "intermediate2",
                  "advanced1",
                  "advanced2"
                ]
              },
              "minItems": 0,
              "maxItems": 6
            },
            "in": "query",
            "name": "level"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hasAudio"
          }
        ]
      },
      "post": {
        "summary": "Create Lesson",
        "operationId": "post-lessons",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          }
        },
        "description": "Create a new lesson.",
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "audio": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "required": [
                      "title",
                      "text",
                      "courseId"
                    ],
                    "properties": {
                      "title": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      },
                      "courseId": {
                        "type": "integer"
                      }
                    }
                  }
                },
                "required": [
                  "data"
                ]
              }
            }
          }
        },
        "tags": [
          "lesson"
        ]
      }
    },
    "/lessons/{lessonId}": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "lessonId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Lesson",
        "tags": [
          "lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-lessons-lessonId",
        "description": "Get lesson details."
      },
      "put": {
        "summary": "Update Lesson",
        "operationId": "put-lessons-lessonId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "image": {
                    "type": "string",
                    "format": "binary"
                  },
                  "audio": {
                    "type": "string",
                    "format": "binary"
                  },
                  "data": {
                    "type": "object",
                    "properties": {
                      "courseId": {
                        "type": "integer"
                      },
                      "title": {
                        "type": "string"
                      },
                      "text": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          },
          "description": ""
        },
        "tags": [
          "lesson"
        ],
        "description": "Update lesson details."
      }
    },
    "/vocabs": {
      "post": {
        "summary": "Create Vocab",
        "operationId": "post-vocabs",
        "responses": {
          "200": {
            "description": "OK"
          },
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VocabDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "languageCode": {
                    "type": "string"
                  },
                  "text": {
                    "type": "string"
                  },
                  "isPhrase": {
                    "type": "boolean"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "vocab"
        ],
        "description": "Create new vocab."
      }
    },
    "/meanings": {
      "post": {
        "summary": "Create Meaning",
        "operationId": "post-meanings",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeaningDetails"
                },
                "examples": {}
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "description": "Unauthorized"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "text": {
                    "type": "string"
                  },
                  "vocabId": {
                    "type": "integer"
                  },
                  "languageCode": {
                    "type": "string"
                  }
                },
                "x-examples": {}
              }
            }
          },
          "description": ""
        },
        "description": "Create a new meaning.",
        "tags": [
          "meaning"
        ]
      }
    },
    "/users/{username}/languages": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "Get User Languages",
        "tags": [
          "language"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LanguageList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-languages",
        "description": "Get a list of langauges the user is learning."
      },
      "post": {
        "summary": "Add Language To User",
        "operationId": "post-users-username-languages",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Add a language to languages the user is learning.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "languageCode": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "language"
        ]
      }
    },
    "/users/{username}/languages/{languageCode}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        },
        {
          "schema": {
            "type": "string"
          },
          "name": "languageCode",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update User Language",
        "operationId": "patch-users-username-languages-languageCode",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LanguageDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "description": "Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Updates user language last time opneed timestamp.",
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "x-examples": {},
                "properties": {
                  "lastOpened": {
                    "type": "string",
                    "enum": [
                      "now"
                    ]
                  }
                }
              }
            }
          }
        },
        "tags": [
          "language"
        ]
      },
      "delete": {
        "summary": "Delete Language From User",
        "operationId": "delete-users-username-languages-languageCode",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Remove a language from list of languages the user is learning.",
        "tags": [
          "language"
        ]
      }
    },
    "/users/{username}/courses": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get User Courses Learning",
        "tags": [
          "course"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/CourseList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-courses",
        "description": "Get the list of courses the user is learning.",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "language"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "beginner1",
                  "beginner2",
                  "intermediate1",
                  "intermediate2",
                  "advanced1",
                  "advanced2"
                ]
              },
              "minItems": 0,
              "maxItems": 6
            },
            "in": "query",
            "name": "level"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          }
        ]
      }
    },
    "/users/{username}/lessons": {
      "parameters": [
        {
          "schema": {
            "type": "string"
          },
          "name": "username",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get User Lessons Learning",
        "tags": [
          "lesson"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/LessonList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-lessons",
        "parameters": [
          {
            "schema": {
              "type": "string",
              "minLength": 2,
              "maxLength": 4
            },
            "in": "query",
            "name": "language"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          },
          {
            "schema": {
              "type": "string",
              "minLength": 4,
              "maxLength": 20
            },
            "in": "query",
            "name": "addedBy"
          },
          {
            "schema": {
              "type": "array",
              "items": {
                "type": "string",
                "enum": [
                  "beginner1",
                  "beginner2",
                  "intermediate1",
                  "intermediate2",
                  "advanced1",
                  "advanced2"
                ]
              },
              "minItems": 0,
              "maxItems": 6
            },
            "in": "query",
            "name": "level"
          },
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "hasAudio"
          }
        ],
        "description": "Get the list of lessons the user is learning."
      },
      "post": {
        "summary": "Add Lesson To Learning",
        "operationId": "post-users-username-lessons",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/LessonDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "lessonId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "lesson"
        ],
        "description": "Add a lesson to list of lessons the user is learning."
      }
    },
    "/users/{username}/vocabs": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "Get User Vocabs",
        "tags": [
          "vocab"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/VocabList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-users-username-vocabs",
        "description": "Get list of saved user vocabs.",
        "parameters": [
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "languageCode"
          },
          {
            "schema": {
              "type": "array"
            },
            "in": "query",
            "name": "level"
          },
          {
            "schema": {
              "type": "string"
            },
            "in": "query",
            "name": "searchQuery"
          }
        ]
      }
    },
    "/users/{username}/vocabs/{vocabId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        },
        {
          "schema": {
            "type": "integer"
          },
          "name": "vocabId",
          "in": "path",
          "required": true
        }
      ],
      "patch": {
        "summary": "Update User Vocab",
        "operationId": "patch-users-username-vocabs",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VocabDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "level": {
                    "type": "integer",
                    "enum": [
                      -1,
                      0,
                      1,
                      2,
                      3,
                      4,
                      5
                    ]
                  },
                  "notes": {
                    "type": "string"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "vocab"
        ],
        "description": "Update user saved vocab details (level, notes). "
      },
      "get": {
        "summary": "Get User Vocab",
        "operationId": "get-users-username-vocabs-vocabId",
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VocabDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "tags": [
          "vocab"
        ],
        "description": "Get user vocab details."
      }
    },
    "/users/{username}/meanings": {
      "parameters": [
        {
          "name": "username",
          "in": "path",
          "required": true,
          "schema": {
            "type": "string",
            "pattern": "^[A-Za-z0-9]*$"
          }
        }
      ],
      "get": {
        "summary": "Get User Meanings",
        "tags": [
          "meaning"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/MeaningList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          }
        },
        "operationId": "get-users-username-meanings",
        "parameters": [
          {
            "schema": {
              "type": "integer"
            },
            "in": "query",
            "name": "vocabId"
          }
        ],
        "description": "Get a list of saved user meanings."
      },
      "post": {
        "summary": "Add Meaning To User",
        "operationId": "post-users-username-meanings",
        "responses": {
          "201": {
            "description": "Created",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/MeaningDetails"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "object",
                "properties": {
                  "meaningId": {
                    "type": "integer"
                  }
                }
              }
            }
          }
        },
        "tags": [
          "meaning"
        ],
        "description": "Adds a meaning to the saved user meanings."
      }
    },
    "/users/{username}/meanings/{meaningId}": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        },
        {
          "schema": {
            "type": "integer"
          },
          "name": "meaningId",
          "in": "path",
          "required": true
        }
      ],
      "delete": {
        "summary": "Remove Meaning From User",
        "operationId": "delete-users-username-meanings-meaningId",
        "responses": {
          "204": {
            "description": "No Content"
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "description": "Removes meaning from list of saved user meanings.",
        "tags": [
          "meaning"
        ]
      }
    },
    "/lessons/{lessonId}/vocabs": {
      "parameters": [
        {
          "schema": {
            "type": "integer"
          },
          "name": "lessonId",
          "in": "path",
          "required": true
        }
      ],
      "get": {
        "summary": "Get Lesson Vocabs",
        "tags": [
          "vocab"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/VocabList"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-lessons-lessonId-words",
        "parameters": [
          {
            "schema": {
              "type": "boolean"
            },
            "in": "query",
            "name": "isPhrase"
          }
        ],
        "description": "Get a list of vocabs in a lesson."
      }
    },
    "/users/{username}/dictionaries": {
      "parameters": [
        {
          "$ref": "#/components/parameters/username"
        }
      ],
      "get": {
        "summary": "",
        "tags": [
          "dictionary"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/DictionaryList"
                  }
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/BadRequest"
          },
          "401": {
            "$ref": "#/components/responses/Unauthenticated"
          },
          "403": {
            "$ref": "#/components/responses/Forbidden"
          },
          "404": {
            "$ref": "#/components/responses/NotFound"
          }
        },
        "operationId": "get-users-username-dictionaries",
        "description": "Gets a list of user dictionaries."
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "x-examples": {},
        "x-stoplight": {
          "id": "e6b459c238b81"
        },
        "properties": {
          "username": {
            "type": "string",
            "maxLength": 20,
            "minLength": 4,
            "pattern": "^[A-Za-z0-9]*$"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "profile": {
            "$ref": "#/components/schemas/ProfileDetails"
          }
        },
        "required": [
          "username",
          "profile"
        ]
      },
      "ProfileDetails": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "languagesLearning": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LanguageList"
            }
          },
          "profilePicture": {
            "type": "string",
            "format": "uri"
          },
          "bio": {
            "type": "string"
          },
          "isPublic": {
            "type": "boolean"
          }
        },
        "required": [
          "id",
          "languagesLearning",
          "profilePicture",
          "bio",
          "isPublic"
        ]
      },
      "LanguageList": {
        "type": "object",
        "x-examples": {},
        "examples": [],
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string",
            "maxLength": 4,
            "minLength": 2
          },
          "name": {
            "type": "string"
          },
          "greeting": {
            "type": "string"
          },
          "flag": {
            "type": "string",
            "format": "uri"
          },
          "flagCircular": {
            "type": "string",
            "format": "uri"
          },
          "flagEmoji": {
            "type": "string"
          },
          "isSupported": {
            "type": "boolean"
          },
          "levelThresholds": {
            "type": "object",
            "required": [
              "beginner1",
              "beginner2",
              "intermediate1",
              "intermediate2",
              "advanced1",
              "advanced2"
            ],
            "properties": {
              "beginner1": {
                "type": "integer"
              },
              "beginner2": {
                "type": "integer"
              },
              "intermediate1": {
                "type": "integer"
              },
              "intermediate2": {
                "type": "integer"
              },
              "advanced1": {
                "type": "integer"
              },
              "advanced2": {
                "type": "integer"
              }
            }
          },
          "learnersCount": {
            "type": "integer"
          }
        },
        "required": [
          "id",
          "code",
          "name",
          "greeting",
          "isSupported",
          "levelThresholds",
          "learnersCount"
        ]
      },
      "LanguageDetails": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "code": {
            "type": "string",
            "maxLength": 4,
            "minLength": 2
          },
          "name": {
            "type": "string"
          },
          "greeting": {
            "type": "string"
          },
          "flag": {
            "type": "string",
            "format": "uri"
          },
          "flagCircular": {
            "type": "string",
            "format": "uri"
          },
          "flagEmoji": {
            "type": "string"
          },
          "isSupported": {
            "type": "boolean"
          },
          "levelThresholds": {
            "type": "object",
            "properties": {
              "beginner1": {
                "type": "integer"
              },
              "beginner2": {
                "type": "integer"
              },
              "intermediate1": {
                "type": "integer"
              },
              "intermediate2": {
                "type": "integer"
              },
              "advanced1": {
                "type": "integer"
              },
              "advanced2": {
                "type": "integer"
              }
            }
          },
          "learnersCount": {
            "type": "integer"
          }
        },
        "title": ""
      },
      "CourseList": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "isPublic": {
            "type": "boolean"
          },
          "level": {
            "type": "string",
            "enum": [
              "Beginner 1",
              "Beginner 2",
              "Intermediate 1",
              "Intermediate 2",
              "Advanced 1",
              "Advanced 2"
            ]
          },
          "language": {
            "type": "integer"
          },
          "addedBy": {
            "type": "string"
          },
          "vocabsByLevel": {
            "type": "object",
            "properties": {
              "0": {
                "type": "integer",
                "minimum": 0
              },
              "1": {
                "type": "integer",
                "minimum": 0
              },
              "2": {
                "type": "integer",
                "minimum": 0
              },
              "3": {
                "type": "integer",
                "minimum": 0
              },
              "4": {
                "type": "integer",
                "minimum": 0
              },
              "5": {
                "type": "integer",
                "minimum": 0
              },
              "6": {
                "type": "integer",
                "minimum": 0
              },
              "-1": {
                "type": "integer",
                "minimum": 0
              }
            },
            "required": [
              "-1",
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6"
            ]
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "image",
          "isPublic",
          "level",
          "language",
          "addedBy"
        ]
      },
      "CourseDetails": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "description": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "isPublic": {
            "type": "boolean"
          },
          "level": {
            "type": "string",
            "enum": [
              "Beginner 1",
              "Beginner 2",
              "Intermediate 1",
              "Intermediate 2",
              "Advanced 1",
              "Advanced 2"
            ]
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDetails"
          },
          "addedBy": {
            "$ref": "#/components/schemas/ProfileDetails"
          },
          "lessons": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/LessonList"
            }
          },
          "vocabsByLevel": {
            "type": "object",
            "required": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "-1"
            ],
            "properties": {
              "0": {
                "type": "integer",
                "minimum": 0
              },
              "1": {
                "type": "integer",
                "minimum": 0
              },
              "2": {
                "type": "integer",
                "minimum": 0
              },
              "3": {
                "type": "integer",
                "minimum": 0
              },
              "4": {
                "type": "integer",
                "minimum": 0
              },
              "5": {
                "type": "integer",
                "minimum": 0
              },
              "6": {
                "type": "integer",
                "minimum": 0
              },
              "-1": {
                "type": "integer",
                "minimum": 0
              }
            }
          }
        },
        "required": [
          "id",
          "title",
          "description",
          "image",
          "isPublic",
          "level",
          "language",
          "addedBy",
          "lessons"
        ]
      },
      "LessonList": {
        "title": "LessonList",
        "x-stoplight": {
          "id": "o75iqcx5nqky7"
        },
        "type": "object",
        "examples": [],
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "course": {
            "$ref": "#/components/schemas/CourseList"
          },
          "orderInCourse": {
            "type": "integer"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          },
          "vocabsByLevel": {
            "type": "object",
            "properties": {
              "0": {
                "type": "integer",
                "minimum": 0
              },
              "1": {
                "type": "integer",
                "minimum": 0
              },
              "2": {
                "type": "integer",
                "minimum": 0
              },
              "3": {
                "type": "integer",
                "minimum": 0
              },
              "4": {
                "type": "integer",
                "minimum": 0
              },
              "5": {
                "type": "integer",
                "minimum": 0
              },
              "6": {
                "type": "integer",
                "minimum": 0
              },
              "-1": {
                "type": "integer",
                "minimum": 0
              }
            },
            "required": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "-1"
            ]
          }
        },
        "required": [
          "id",
          "title",
          "image",
          "course",
          "orderInCourse",
          "addedOn"
        ]
      },
      "LessonDetails": {
        "title": "LessonDetails",
        "x-stoplight": {
          "id": "o75iqcx5nqky7"
        },
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "title": {
            "type": "string"
          },
          "text": {
            "type": "string"
          },
          "audio": {
            "type": "string",
            "format": "uri"
          },
          "image": {
            "type": "string",
            "format": "uri"
          },
          "course": {
            "$ref": "#/components/schemas/CourseDetails"
          },
          "orderInCourse": {
            "type": "integer"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          },
          "vocabsByLevel": {
            "type": "object",
            "properties": {
              "0": {
                "type": "integer",
                "minimum": 0
              },
              "1": {
                "type": "integer",
                "minimum": 0
              },
              "2": {
                "type": "integer",
                "minimum": 0
              },
              "3": {
                "type": "integer",
                "minimum": 0
              },
              "4": {
                "type": "integer",
                "minimum": 0
              },
              "5": {
                "type": "integer",
                "minimum": 0
              },
              "6": {
                "type": "integer",
                "minimum": 0
              },
              "-1": {
                "type": "integer",
                "minimum": 0
              }
            },
            "required": [
              "0",
              "1",
              "2",
              "3",
              "4",
              "5",
              "6",
              "-1"
            ]
          }
        },
        "required": [
          "id",
          "title",
          "text",
          "audio",
          "image",
          "course",
          "orderInCourse",
          "addedOn"
        ]
      },
      "VocabList": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "isPhrase": {
            "type": "boolean"
          },
          "level": {
            "type": "integer"
          },
          "notes": {
            "type": "null"
          },
          "language": {
            "type": "string"
          },
          "userMeanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeaningList"
            }
          },
          "allMeanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeaningList"
            }
          }
        }
      },
      "VocabDetails": {
        "type": "object",
        "x-examples": {},
        "x-stoplight": {
          "id": "9926af812414a"
        },
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "isPhrase": {
            "type": "boolean"
          },
          "level": {
            "type": "integer"
          },
          "notes": {
            "type": "null"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDetails"
          },
          "userMeanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeaningList"
            }
          },
          "allMeanings": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MeaningList"
            }
          }
        }
      },
      "MeaningList": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "vocab": {
            "type": "integer"
          },
          "learnersCount": {
            "type": "integer"
          },
          "addedBy": {
            "type": "string"
          },
          "language": {
            "type": "string"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          }
        },
        "examples": []
      },
      "MeaningDetails": {
        "type": "object",
        "x-examples": {},
        "properties": {
          "id": {
            "type": "integer"
          },
          "text": {
            "type": "string"
          },
          "vocab": {
            "$ref": "#/components/schemas/VocabDetails"
          },
          "learnersCount": {
            "type": "integer"
          },
          "addedBy": {
            "$ref": "#/components/schemas/ProfileDetails"
          },
          "language": {
            "$ref": "#/components/schemas/LanguageDetails"
          },
          "addedOn": {
            "type": "string",
            "format": "date-time"
          }
        }
      },
      "DictionaryList": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer"
          },
          "name": {
            "type": "string"
          },
          "link": {
            "type": "string"
          },
          "language": {
            "type": "string"
          }
        },
        "x-examples": {
          "Example 1": {
            "id": 1,
            "name": "Google Translate",
            "link": "translate.google.com",
            "language": "en"
          }
        }
      }
    },
    "securitySchemes": {
      "token": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "responses": {
      "Unauthenticated": {
        "description": "User is not authenticated or invalid authentication credentials.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {},
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    401
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Unauthorized"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              }
            },
            "examples": {}
          }
        },
        "headers": {}
      },
      "NotFound": {
        "description": "Resource not found.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    404
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Not Found"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "Forbidden": {
        "description": "User is not allowed to perform this operation.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {
                "Example 1": {
                  "code": 403,
                  "status": "Forbidden",
                  "message": "string",
                  "details": "string"
                }
              },
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    403
                  ]
                },
                "status": {
                  "type": "string"
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              }
            },
            "examples": {}
          }
        },
        "headers": {}
      },
      "BadRequest": {
        "description": "Bad Request\n\nSome fields are invalid or required fields are missing.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    400
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Bad Request"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                },
                "fields": {
                  "type": "object",
                  "minProperties": 1
                }
              },
              "required": [
                "code",
                "status",
                "message",
                "details"
              ]
            }
          }
        }
      },
      "UnsupportedMediaType": {
        "description": "Unexpected media type or file mime type",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {},
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    415
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Unsupported Media Type"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              }
            },
            "examples": {}
          }
        }
      },
      "RequestTooLarge": {
        "description": "Uploaded files are too large.",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "x-examples": {},
              "properties": {
                "code": {
                  "type": "integer",
                  "enum": [
                    413
                  ]
                },
                "status": {
                  "type": "string",
                  "enum": [
                    "Unsupported Media Type"
                  ]
                },
                "message": {
                  "type": "string"
                },
                "details": {
                  "type": "string"
                }
              }
            },
            "examples": {}
          }
        }
      }
    },
    "parameters": {
      "username": {
        "name": "username",
        "in": "path",
        "required": true,
        "schema": {
          "type": "string",
          "pattern": "^[A-Za-z0-9]*$",
          "maxLength": 20
        }
      }
    }
  },
  "security": [
    {
      "token": []
    }
  ]
}